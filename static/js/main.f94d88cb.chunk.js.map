{"version":3,"sources":["components/GoodList.jsx","App.jsx","index.jsx"],"names":["GoodsList","goods","map","good","goodsFromServer","SORT_TYPE","App","useState","sortBy","setSortBy","isReverse","setIsReverse","preparedGoodsList","arr","sort","a","b","length","localeCompare","reverse","sortPreparedGoods","className","type","classNames","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAAaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,SCGjBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,SAAtBA,EAA0C,WAwBzC,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KAEMC,EA1BR,SAA2BC,EAAKL,EAAQE,GACtC,IAAIE,EAAiB,YAAOC,GAE5B,OAAQL,GACN,KAAKH,EACHO,EAAkBE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAC9C,MAEF,KAAKZ,EACHO,EAAkBE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,cAAcF,MACjD,MAEF,QAASJ,EAAiB,UAAOR,GAOnC,OAJIM,GACFE,EAAkBO,UAGbP,EAOmBQ,CACxBhB,EACAI,EACAE,GAGF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYf,IAAWH,IAE3BmB,QAAS,kBAAMf,EAAUJ,IAN3B,iCAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYf,IAAWH,IAE3BmB,QAAS,kBAAMf,EAAUJ,IAN3B,4BAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAab,IAEjBc,QAAS,kBAAMb,GAAcD,IAN/B,sBAWEF,GAAUE,IACV,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPb,GAAa,GACbF,EAAU,KALd,sBAaJ,cAAC,EAAD,CAAWR,MAAOW,QCpGxBa,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f94d88cb.chunk.js","sourcesContent":["export const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li data-cy=\"Good\" key={good}>{good}</li>\n    ))}\n  </ul>\n);\n","import 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { GoodsList } from './components/GoodList';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_TYPE = { length: 'length', alphabet: 'alphabet' };\n\nfunction sortPreparedGoods(arr, sortBy, isReverse) {\n  let preparedGoodsList = [...arr];\n\n  switch (sortBy) {\n    case SORT_TYPE.length:\n      preparedGoodsList.sort((a, b) => a.length - b.length);\n      break;\n\n    case SORT_TYPE.alphabet:\n      preparedGoodsList.sort((a, b) => a.localeCompare(b));\n      break;\n\n    default: preparedGoodsList = [...goodsFromServer];\n  }\n\n  if (isReverse) {\n    preparedGoodsList.reverse();\n  }\n\n  return preparedGoodsList;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReverse, setIsReverse] = useState(false);\n\n  const preparedGoodsList = sortPreparedGoods(\n    goodsFromServer,\n    sortBy,\n    isReverse,\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortBy !== SORT_TYPE.alphabet },\n          )}\n          onClick={() => setSortBy(SORT_TYPE.alphabet)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-success',\n            { 'is-light': sortBy !== SORT_TYPE.length },\n          )}\n          onClick={() => setSortBy(SORT_TYPE.length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button is-warning',\n            { 'is-light': !isReverse },\n          )}\n          onClick={() => setIsReverse(!isReverse)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReverse) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setIsReverse(false);\n              setSortBy('');\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <GoodsList goods={preparedGoodsList} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}